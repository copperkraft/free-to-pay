{"version":3,"sources":["utils/useMouse.ts","utils/useKeyPress.ts","models/Pumpkman.tsx","components/Character.tsx","reportWebVitals.ts","textures/gravel/gravel_ground_01_diff_1k.jpg","textures/gravel/gravel_ground_01_disp_1k.jpg","textures/gravel/gravel_ground_01_nor_1k.jpg","textures/gravel/gravel_ground_01_rough_1k.jpg","textures/gravel/gravel_ground_01_ao_1k.jpg","components/Level.tsx","components/GameScene.tsx","core/Game.tsx","App.tsx","index.tsx"],"names":["mouseButtonMap","useKeyPress","key","useState","isDown","set","keys","Array","isArray","handleKeyDown","useCallback","event","includes","code","handleKeyUp","handleWindowBlur","useEffect","window","addEventListener","removeEventListener","Pumpkman","group","useRef","useGLTF","nodes","materials","ref","dispose","rotation","Math","PI","position","scale","geometry","Cube","material","head","Cube_1","tail","Cube_2","eyes","Cube_3","body","vest","pants","preload","CharacterState","pigSize","pigLegSize","onPerfEntry","Character","moveTarget","box","up","down","left","right","velocity","useControls","maxSpeed","minSpeed","acceleration","slowdown","rotationSpeed","useKeys","useKeysTurningCoeff","turning","characterState","IDLE","forwardVector","Vector3","direction","targetPosition","remainedDistance","targetRotationAngle","current","SLOWDOWN","ACCELERATION","setY","subVectors","normalize","copy","getWorldDirection","angleTo","clone","cross","y","useFrame","state","delta","lerp","RUN","MIN_SPEED","distanceTo","diff","addScaledVector","setRotationFromAxisAngle","atan2","x","z","angleDiff","abs","rotateOnAxis","args","attach","color","Level","size","onTerrainPointerDown","onTerrainPointerMove","terrain","useTexture","mapUrl","displacementUrl","normalUrl","roughUrl","aoUrl","map","displacement","normal","rough","ao","forEach","texture","wrapS","MirroredRepeatWrapping","wrapT","repeat","anisotropy","visible","onPointerDown","button","point","toArray","onPointerMove","roughnessMap","normalMap","aoMap","roughness","metalness","opacity","transparent","levelSize","GameScene","children","mouseUp","isFired","handleMouseUp","useMouse","moving","setMoving","followMouse","setMoveTarget","target","intensity","Game","onCreated","gl","setClearColor","PerspectiveCamera","makeDefault","MapControls","enabled","fallback","App","style","height","width","ReactDOM","render","StrictMode","document","getElementById","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.ddc3d163.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nconst mouseButtonMap = [\n  'Left',\n];\n\nexport const useMouse = (key: string | string[]): boolean => {\n  const [isFired, set] = useState(false);\n  const keys = (Array.isArray(key) ? key : [key]);\n\n  const handleMouseUp = useCallback(\n    (event: MouseEvent) => {\n      if (!isFired && keys.includes(mouseButtonMap[event.button])) {\n        set(true);\n      }\n    },\n    [...keys, isFired],\n  );\n\n  useEffect(() => {\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseUp]);\n\n  return isFired;\n};\n","import { useCallback, useEffect, useState } from 'react';\n\nexport const useKeyPress = (key: string | string[]): boolean => {\n  const [isDown, set] = useState(false);\n  const keys = Array.isArray(key) ? key : [key];\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!isDown && keys.includes(event.code)) {\n        set(true);\n      }\n    },\n    [...keys, isDown],\n  );\n  const handleKeyUp = useCallback(\n    (event: KeyboardEvent) => {\n      if (isDown && keys.includes(event.code)) {\n        set(false);\n      }\n    },\n    [...keys, isDown],\n  );\n\n  const handleWindowBlur = useCallback(() => {\n    set(false);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    window.addEventListener('blur', handleWindowBlur);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n      window.removeEventListener('blur', handleWindowBlur);\n    };\n  }, [handleKeyDown, handleKeyUp, handleWindowBlur]);\n\n  return isDown;\n};\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport * as THREE from 'three';\nimport React, { useRef } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Cube: THREE.Mesh\n    Cube_1: THREE.Mesh\n    Cube_2: THREE.Mesh\n    Cube_3: THREE.Mesh\n    vest: THREE.Mesh\n    pants: THREE.Mesh\n    pig: THREE.Mesh\n  }\n  materials: {\n    head: THREE.MeshStandardMaterial\n    tail: THREE.MeshStandardMaterial\n    eyes: THREE.MeshStandardMaterial\n    body: THREE.MeshStandardMaterial\n    vest: THREE.MeshStandardMaterial\n  }\n};\n\nexport const Pumpkman = () => {\n  const group = useRef<THREE.Group>();\n  const { nodes, materials } = useGLTF('/free-to-pay/models/pumpkman.glb') as GLTFResult;\n  return (\n    <group ref={group} dispose={null} rotation={[0, -Math.PI / 2, 0]} position={[0, -0.5, 0]}>\n      <group position={[-0.2, 2.41, 0]} scale={[0.21, 0.21, 0.21]}>\n        <mesh geometry={nodes.Cube.geometry} material={materials.head} />\n        <mesh geometry={nodes.Cube_1.geometry} material={materials.tail} />\n        <mesh geometry={nodes.Cube_2.geometry} material={materials.eyes} />\n        <mesh geometry={nodes.Cube_3.geometry} material={materials.body} />\n      </group>\n      <mesh\n        geometry={nodes.vest.geometry}\n        material={nodes.vest.material}\n        position={[-0.2, 2.41, 0]}\n        scale={[0.21, 0.21, 0.21]}\n      />\n      <mesh\n        geometry={nodes.pants.geometry}\n        material={nodes.pants.material}\n        position={[-0.2, 2.41, 0]}\n        scale={[0.21, 0.21, 0.21]}\n      />\n    </group>\n  );\n};\n\nuseGLTF.preload('/free-to-pay/models/pumpkman.glb');\n","import React, { useEffect, useRef } from 'react';\nimport { Mesh, Vector3 } from 'three';\nimport { Cylinder } from '@react-three/drei';\nimport { useFrame } from '@react-three/fiber';\nimport { useControls } from 'leva';\nimport { useKeyPress } from '../utils/useKeyPress';\nimport { Pumpkman } from '../models/Pumpkman';\n\nconst pigSize: [number, number, number] = [0.5, 0.4, 1.2];\nconst pigLegSize: [number, number, number] = [0.2, 0.1, 0.6];\n\nenum CharacterState {\n  IDLE,\n  ACCELERATION,\n  RUN,\n  SLOWDOWN,\n  MIN_SPEED,\n}\n\nexport interface CharacterProps {\n  moveTarget: Vector3 | null;\n}\n\nexport const Character: React.FC<CharacterProps> = ({ moveTarget }: CharacterProps) => {\n  const box = useRef<Mesh>(null!);\n  const elevation = 0.75;\n\n  const up = useKeyPress(['ArrowUp', 'KeyW']);\n  const down = useKeyPress(['ArrowDown', 'KeyS']);\n  const left = useKeyPress(['ArrowLeft', 'KeyA']);\n  const right = useKeyPress(['ArrowRight', 'KeyD']);\n  const velocity = useRef(0);\n  const {\n    maxSpeed,\n    minSpeed,\n    acceleration,\n    slowdown,\n    rotationSpeed,\n    useKeys,\n    useKeysTurningCoeff,\n  } = useControls(\n    {\n      maxSpeed: 10,\n      minSpeed: 1,\n      acceleration: 20,\n      slowdown: 20,\n      rotationSpeed: 5,\n      useKeys: false,\n      useKeysTurningCoeff: 50,\n    },\n  );\n  const turning = useRef(false);\n  const characterState = useRef(CharacterState.IDLE);\n\n  const forwardVector = useRef(new Vector3(0, 0, 0));\n  const direction = useRef(new Vector3(0, 0, 0));\n  const targetPosition = useRef(new Vector3(0, 0, 0));\n  const remainedDistance = useRef(0);\n  const targetRotationAngle = useRef(0);\n\n  useEffect(() => {\n    if (moveTarget && !useKeys) {\n      if (characterState.current === CharacterState.IDLE\n        || characterState.current === CharacterState.SLOWDOWN) {\n        characterState.current = CharacterState.ACCELERATION;\n      }\n\n      turning.current = true;\n      moveTarget.setY(elevation);\n      direction.current.subVectors(moveTarget, box.current.position).normalize();\n      targetPosition.current.copy(moveTarget);\n      box.current.getWorldDirection(forwardVector.current);\n      targetRotationAngle.current = direction.current.angleTo(forwardVector.current);\n      if (direction.current.clone().cross(forwardVector.current).y > 0) {\n        targetRotationAngle.current = -targetRotationAngle.current;\n      }\n    }\n  }, [moveTarget]);\n\n  useFrame((state, delta) => {\n    if (useKeys) {\n      if (up || left || right || down) {\n        if (characterState.current === CharacterState.IDLE\n          || characterState.current === CharacterState.SLOWDOWN) {\n          characterState.current = CharacterState.ACCELERATION;\n        }\n\n        direction.current.lerp(new Vector3(\n          (-left + (+right)),\n          0,\n          (-up + (+down)),\n        ).normalize(), 1 / useKeysTurningCoeff).normalize();\n\n        turning.current = true;\n      } else if (characterState.current === CharacterState.RUN\n        || characterState.current === CharacterState.ACCELERATION) {\n        characterState.current = CharacterState.SLOWDOWN;\n      }\n    }\n\n    // Movement\n\n    switch (characterState.current) {\n      case CharacterState.ACCELERATION:\n        velocity.current += acceleration * delta;\n        if (velocity.current >= maxSpeed) {\n          velocity.current = maxSpeed;\n          characterState.current = CharacterState.RUN;\n        }\n        break;\n      case CharacterState.RUN:\n        break;\n      case CharacterState.SLOWDOWN:\n        velocity.current -= slowdown * delta;\n        if (!useKeys) {\n          if (velocity.current <= minSpeed) {\n            velocity.current = minSpeed;\n            characterState.current = CharacterState.MIN_SPEED;\n          }\n        } else if (velocity.current <= 0) {\n          velocity.current = 0;\n          characterState.current = CharacterState.IDLE;\n        }\n\n        break;\n      case CharacterState.MIN_SPEED:\n      case CharacterState.IDLE:\n      default:\n        break;\n    }\n\n    if (characterState.current !== CharacterState.IDLE) {\n      if (!useKeys) {\n        remainedDistance.current = targetPosition.current.distanceTo(box.current.position);\n        if (remainedDistance.current < (maxSpeed * maxSpeed) / (2 * slowdown)) {\n          characterState.current = CharacterState.SLOWDOWN;\n        }\n\n        const diff = delta * velocity.current;\n        if (remainedDistance.current < diff) {\n          box.current.position.copy(targetPosition.current);\n          velocity.current = 0;\n          characterState.current = CharacterState.IDLE;\n        } else {\n          box.current.position.addScaledVector(direction.current, diff);\n        }\n      }\n      if (useKeys) {\n        const diff = delta * velocity.current;\n        box.current.position.addScaledVector(direction.current, diff);\n      }\n    }\n\n    // Turning\n\n    if (turning.current) {\n      if (!useKeys) {\n        box.current.getWorldDirection(forwardVector.current);\n        const angleDiff = delta * rotationSpeed;\n        if (Math.abs(targetRotationAngle.current) < angleDiff) {\n          box.current.rotateOnAxis(new Vector3(0, 1, 0), targetRotationAngle.current);\n          turning.current = false;\n        } else if (targetRotationAngle.current > 0) {\n          targetRotationAngle.current -= angleDiff;\n          box.current.rotateOnAxis(new Vector3(0, 1, 0), angleDiff);\n        } else {\n          targetRotationAngle.current += angleDiff;\n          box.current.rotateOnAxis(new Vector3(0, 1, 0), -angleDiff);\n        }\n      } else {\n        box.current.setRotationFromAxisAngle(\n          new Vector3(0, 1, 0),\n          Math.atan2(direction.current.x, direction.current.z),\n        );\n      }\n    }\n  });\n\n  return (\n    <group ref={box} position={[0, elevation, 0]}>\n      <Cylinder args={pigSize} rotation={[Math.PI / 2, 0, 0]} position={[0, 0, 0]}>\n        <meshStandardMaterial attach=\"material\" color=\"pink\" />\n      </Cylinder>\n      <Cylinder args={[0.2, 0.4, 0.8]} rotation={[Math.PI / 2, 0, 0]} position={[0, 0.1, 0.75]}>\n        <meshStandardMaterial attach=\"material\" color=\"pink\" />\n      </Cylinder>\n      <Cylinder args={pigLegSize} position={[0.2, -0.5, 0.3]}>\n        <meshStandardMaterial attach=\"material\" color=\"pink\" />\n      </Cylinder>\n      <Cylinder args={pigLegSize} position={[-0.2, -0.5, 0.3]}>\n        <meshStandardMaterial attach=\"material\" color=\"pink\" />\n      </Cylinder>\n      <Cylinder args={pigLegSize} position={[0.2, -0.5, -0.2]}>\n        <meshStandardMaterial attach=\"material\" color=\"pink\" />\n      </Cylinder>\n      <Cylinder args={pigLegSize} position={[-0.2, -0.5, -0.2]}>\n        <meshStandardMaterial attach=\"material\" color=\"pink\" />\n      </Cylinder>\n\n      <group>\n        <Pumpkman />\n      </group>\n    </group>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n","export default __webpack_public_path__ + \"static/media/gravel_ground_01_diff_1k.388a9c56.jpg\";","export default __webpack_public_path__ + \"static/media/gravel_ground_01_disp_1k.f7972ada.jpg\";","export default __webpack_public_path__ + \"static/media/gravel_ground_01_nor_1k.90f13fb6.jpg\";","export default __webpack_public_path__ + \"static/media/gravel_ground_01_rough_1k.75a0f41e.jpg\";","export default __webpack_public_path__ + \"static/media/gravel_ground_01_ao_1k.0864f47a.jpg\";","import React, { useRef } from 'react';\n\nimport { Mesh, MirroredRepeatWrapping, Vector3 } from 'three';\nimport { Plane, useTexture } from '@react-three/drei';\nimport { ThreeEvent } from '@react-three/fiber';\nimport mapUrl from '../textures/gravel/gravel_ground_01_diff_1k.jpg';\nimport displacementUrl from '../textures/gravel/gravel_ground_01_disp_1k.jpg';\nimport normalUrl from '../textures/gravel/gravel_ground_01_nor_1k.jpg';\nimport roughUrl from '../textures/gravel/gravel_ground_01_rough_1k.jpg';\nimport aoUrl from '../textures/gravel/gravel_ground_01_ao_1k.jpg';\n\ninterface LevelProps {\n  size: [number, number];\n  onTerrainPointerDown: (position: Vector3) => void\n  onTerrainPointerMove: (position: Vector3) => void;\n}\n\nexport const Level: React.FC<LevelProps> = ({\n  size,\n  onTerrainPointerDown,\n  onTerrainPointerMove,\n}: LevelProps) => {\n  const terrain = useRef<Mesh>(null!);\n  const [\n    map,\n    displacement,\n    normal,\n    rough,\n    ao,\n  ] = useTexture([\n    mapUrl,\n    displacementUrl,\n    normalUrl,\n    roughUrl,\n    aoUrl,\n  ]);\n\n  [map, displacement, normal, rough, ao].forEach((texture) => {\n    if (texture.wrapS === MirroredRepeatWrapping) {\n      return;\n    }\n    /* eslint-disable no-param-reassign */\n    texture.wrapS = MirroredRepeatWrapping;\n    texture.wrapT = MirroredRepeatWrapping;\n    texture.repeat.set(6, 6);\n    texture.anisotropy = 4;\n    /* eslint-enable no-param-reassign */\n  });\n\n  return (\n    <Plane\n      visible\n      position={[0, 0, 0]}\n      rotation={[-Math.PI / 2, 0, 0]}\n      ref={terrain}\n      args={size}\n      onPointerDown={(event: ThreeEvent<PointerEvent>) => {\n        if (event.button === 0) {\n          onTerrainPointerDown(new Vector3(...event.point.toArray()));\n        }\n      }}\n      onPointerMove={(event: ThreeEvent<PointerEvent>) => {\n        onTerrainPointerMove(new Vector3(...event.point.toArray()));\n      }}\n    >\n      <meshStandardMaterial\n        map={map}\n        roughnessMap={rough}\n        normalMap={normal}\n        aoMap={ao}\n        attach=\"material\"\n        roughness={1}\n        metalness={0}\n        opacity={1}\n        transparent\n      />\n    </Plane>\n  );\n};\n","import { useFrame } from '@react-three/fiber';\nimport { useControls } from 'leva';\nimport React, { PropsWithChildren, useCallback, useState } from 'react';\nimport { Vector3 } from 'three';\nimport { useMouse } from '../utils/useMouse';\nimport { Character } from './Character';\nimport { Level } from './Level';\n\ninterface GameSceneProps { }\n\nconst levelSize: [number, number] = [40, 40];\n\nexport const GameScene: React.FC<GameSceneProps> = ({\n  children,\n}: PropsWithChildren<GameSceneProps>) => {\n  const mouseUp = useMouse(['Left']);\n  const [moving, setMoving] = useState(false);\n\n  const {\n    followMouse,\n  } = useControls(\n    {\n      followMouse: false,\n    },\n  );\n\n  // Тут что-то не так с коллбэками. followMouse и moving не сбрасывают мемоизацию коллбэка.\n  // Что-то я не понимаю до конца в реакте тут, замыкания не замыкаются.\n  // А если followMouse true по умолчанию сделать, то только один раз работает.\n\n  const [moveTarget, setMoveTarget] = useState<Vector3 | null>(null);\n\n  const onTerrainPointerDown = useCallback((target: Vector3) => {\n    if (followMouse) {\n      setMoving(true);\n    }\n    setMoveTarget(target);\n  }, [followMouse, moving]);\n\n  const onTerrainPointerMove = useCallback((target: Vector3) => {\n    if (followMouse && moving) {\n      setMoveTarget(target);\n    }\n  }, [followMouse, moving]);\n\n  useFrame(() => {\n    if (mouseUp && moving) {\n      setMoving(false);\n    }\n  });\n\n  return (\n    <>\n      <Level\n        size={levelSize}\n        onTerrainPointerDown={onTerrainPointerDown}\n        onTerrainPointerMove={onTerrainPointerMove}\n      />\n      <pointLight color=\"white\" intensity={2} position={[10, 10, 5]} />\n      <ambientLight color=\"yellow\" intensity={0.2} />\n      <Character moveTarget={moveTarget} />\n      {children}\n    </>\n  );\n};\n","import React, { Suspense } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { MapControls, PerspectiveCamera } from '@react-three/drei';\nimport { GameScene } from '../components/GameScene';\n\nexport const Game: React.FC = () => (\n  <Canvas\n    onCreated={({ gl }) => {\n      gl.setClearColor('#000000');\n    }}\n  >\n    <axesHelper />\n    <PerspectiveCamera makeDefault position={[0, 20, 15]} />\n    <MapControls enabled={false} />\n    <Suspense fallback={null}>\n      <GameScene />\n    </Suspense>\n  </Canvas>\n);\n","import React from 'react';\nimport { Game } from './core/Game';\n\nexport const App = () => (\n  <div\n    style={{\n      height: '100vh',\n      width: '100vw',\n    }}\n  >\n    <Game />\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { reportWebVitals } from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}